[package]
name = "hydradx"
version = "14.1.0"
description = "Hydration node"
authors = ["GalacticCouncil"]
edition = "2021"
license = "Apache 2.0"
repository = "https://github.com/galacticcouncil/HydraDX-node"
build = "build.rs"

[[bin]]
name = "hydradx"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
hydra-dx-build-script-utils = { workspace = true }

[dependencies]
codec = { workspace = true }
hex-literal = { workspace = true }
hex = { workspace = true }
jsonrpsee = { workspace = true }
log = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
clap = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }
env_logger = "0.11.6"
#hyper = { version = "1.3.1", features = ["http2", "client"], default-features = false }
hyperv14 = { package = "hyper", features = ["http2", "stream"], version = "0.14.29", default-features = true }
#hyper-rustls = { version = "0.24.2" }
hyper-rustls = { version = "0.24.2", features = ["http2"], default-features = false }
#hyper-util = { version = "0.1.5", default-features = false }
tokio = { workspace = true, default-features = true }
threadpool = { version = "1.7" }
num_cpus = { version = "1.13.1" }
parking_lot = { version = "0.12.1", default-features = false }

# local dependencies
hydradx-runtime = { workspace = true, features = ["std"] }
hydradx-traits = { workspace = true, default-features = false }
primitives = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-claims = { workspace = true }
pallet-balances = { workspace = true }
pallet-ethereum = { workspace = true }
ethereum = { workspace = true }
pallet-liquidation = { workspace = true }
ethabi = { workspace = true }

# Substrate dependencies
frame-benchmarking = { workspace = true }
frame-benchmarking-cli = { workspace = true, optional = true }
pallet-transaction-payment-rpc = { workspace = true }
sc-basic-authorship = { workspace = true }
sc-chain-spec = { workspace = true }
sc-cli = { workspace = true }
sc-client-api = { workspace = true }
sc-client-db = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-aura = { workspace = true }
sc-executor = { workspace = true }
sc-keystore = { workspace = true }
sc-rpc = { workspace = true }
sc-rpc-api = { workspace = true }
sc-service = { workspace = true }
sc-tracing = { workspace = true }
sc-telemetry = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sc-sysinfo = { workspace = true }
sp-api = { workspace = true }
sp-std = { workspace = true }
sp-block-builder = { workspace = true }
sp-blockchain = { workspace = true }
sp-consensus = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-runtime = { workspace = true }
sp-timestamp = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-trie = { workspace = true }
sp-storage = { workspace = true }
substrate-frame-rpc-system = { workspace = true }
sc-network = { workspace = true }
sc-network-sync = { workspace = true }
sc-network-common = { workspace = true }
sp-keystore = { workspace = true }
sp-session = { workspace = true }
sp-offchain = { workspace = true }
sc-offchain = { workspace = true }
sp-io = { workspace = true }
substrate-prometheus-endpoint = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
sp-authority-discovery = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
substrate-state-trie-migration-rpc = { workspace = true }

trie-db = { workspace = true }
sp-state-machine = { workspace = true }

# Cumulus dependencies
cumulus-client-cli = { workspace = true }
cumulus-client-collator = { workspace = true }
cumulus-client-consensus-aura = { workspace = true }
cumulus-client-consensus-common = { workspace = true }
cumulus-client-consensus-proposer = { workspace = true }
cumulus-client-network = { workspace = true }
cumulus-client-service = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-parachain-inherent = { workspace = true }
cumulus-relay-chain-interface = { workspace = true }
cumulus-relay-chain-inprocess-interface = { workspace = true }
cumulus-relay-chain-minimal-node = { workspace = true }
cumulus-test-relay-sproof-builder = { workspace = true }

# Polkadot dependencies
polkadot-cli = { workspace = true }
polkadot-parachain = { workspace = true }
polkadot-primitives = { workspace = true }
polkadot-service = { workspace = true }

substrate-test-runtime = { git = "https://github.com/galacticcouncil/polkadot-sdk", branch = "stable2409-patch", default-features = false }
substrate-test-runtime-client = { git = "https://github.com/galacticcouncil/polkadot-sdk", branch = "stable2409-patch", default-features = false }
sp-keyring = { git = "https://github.com/galacticcouncil/polkadot-sdk", branch = "stable2409-patch", default-features = false }
frame-metadata-hash-extension = { workspace = true }
frame-metadata = { version = "16.0.0", features = ["current"], default-features = true }
frame-system = { workspace = true }
frame-support = { workspace = true }
merkleized-metadata = { version = "0.1.0" }

# Frontier
fc-consensus = { workspace = true }
fc-db = { workspace = true, features = ["default"] }
fc-mapping-sync = { workspace = true }
fc-rpc = { workspace = true }
fc-rpc-core = { workspace = true }
fp-rpc = { workspace = true }
fp-storage = { workspace = true }
fp-consensus = { workspace = true }
fp-self-contained = { workspace = true }

[features]
default = [
    "frame-benchmarking-cli",
]
runtime-benchmarks = [
    "hydradx-runtime/runtime-benchmarks",
    "frame-benchmarking-cli",
    "polkadot-service/runtime-benchmarks",
    "polkadot-cli/runtime-benchmarks",
]
try-runtime = [
    "hydradx-runtime/try-runtime",
]
