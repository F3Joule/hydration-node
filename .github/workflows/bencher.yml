name: benchmarking
on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: true
  workflow_run:
    workflows: [ "build-and-deploy" ]
    types:
      - completed

jobs:
  execute:
    if: |
      (github.event_name == 'workflow_dispatch') || 
      (github.event_name == 'workflow_run' && 
       github.event.workflow_run.conclusion == 'success' && 
       github.event.workflow_run.pull_requests[0])

    concurrency: benchmark-execution
    runs-on: toad

    steps:
      - name: Determine benchmark type and PR number
        id: setup
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "benchmark_type=full" >> $GITHUB_OUTPUT
            echo "pr_number=${{ github.event.inputs.pr_number }}" >> $GITHUB_OUTPUT
            echo "run_id=$(gh api -H 'Accept: application/vnd.github+json' repos/${{ github.repository }}/actions/runs?event=pull_request\&status=success\&per_page=100 | jq -r --arg PR '${{ github.event.inputs.pr_number }}' '.workflow_runs[] | select(.name=="build-and-deploy" and (.pull_requests | length > 0) and (.pull_requests[].number | tostring | contains($PR))) | .id' | head -n 1)" >> $GITHUB_OUTPUT
          else
            echo "benchmark_type=quick" >> $GITHUB_OUTPUT
            echo "pr_number=${{ github.event.workflow_run.pull_requests[0].number }}" >> $GITHUB_OUTPUT
            echo "run_id=${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT
          fi
          echo "commit_sha=${{ github.event_name == 'workflow_dispatch' && github.sha || github.event.workflow_run.head_sha }}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.setup.outputs.commit_sha }}

      - name: Download benchmarking CLI
        uses: actions/download-artifact@v4
        with:
          name: hydradx-bencher
          path: ./bin
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ steps.setup.outputs.run_id }}

      - name: Make binary executable
        run: chmod +x ./bin/hydradx

      - name: Create weights placeholders
        run: |
          mkdir -p weights
          ./bin/hydradx benchmark pallet --list | sed 1d | awk -F', ' '{print $1}' | sort | uniq | while read pallet; do
            touch "weights/${pallet}.rs"
          done

      - name: Run benchmarks
        id: execute-benchmarks
        run: |
          BENCHMARK_FLAGS="--all --bin ./bin/hydradx"
          if [[ "${{ steps.setup.outputs.benchmark_type }}" == "quick" ]]; then
            BENCHMARK_FLAGS="$BENCHMARK_FLAGS --check"
          fi
          ./scripts/benchmarking.sh $BENCHMARK_FLAGS 2>&1 | tee benchmark_results.log

      - name: Upload benchmarking results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ steps.setup.outputs.benchmark_type }}
          path: benchmark_results.log
          retention-days: 3

      - name: Upload weights directory
        id: bencher-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-weights-${{ steps.setup.outputs.benchmark_type }}
          path: weights/
          retention-days: 3

      - name: Sticky Pull Request Comment
        if: steps.setup.outputs.pr_number
        uses: marocchino/sticky-pull-request-comment@v2.1.0
        with:
          number: ${{ steps.setup.outputs.pr_number }}
          message: |
            ${{ steps.setup.outputs.benchmark_type == 'full' && 'Full' || 'Quick' }} benchmark at commit ${{ steps.setup.outputs.commit_sha }} has been executed successfully.
            [View results](${{ steps.bencher-artifacts.outputs.artifact-url }})