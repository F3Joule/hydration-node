name: build-and-deploy
on:
  push:
    branches:
      - master
    tags:
      - v*
  workflow_dispatch:
  pull_request:

env:
  RELAY_CHAIN_VERSION: v0.9.28

jobs:
  build:
    runs-on: toad
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - run: git describe --tags --abbrev=0
#      - name: Setup cmake
#        uses: jwlawson/actions-setup-cmake@v1.12
#      - name: Install Rust
#        uses: actions-rust-lang/setup-rust-toolchain@v1
#        with:
#          rustflags: ''
#      - name: Run tests
#        run: make test-release
#      - name: Build release
#        run: time make build-release
#      - name: Version info
#        run: ./target/release/hydradx --version
#      - name: Upload release binary
#        uses: actions/upload-artifact@v4
#        with:
#          name: hydradx
#          path: target/release/hydradx
#      - name: Upload release wasm
#        uses: actions/upload-artifact@v4
#        with:
#          name: hydradx_runtime.compact.compressed.wasm
#          path: target/release/wbuild/hydradx-runtime/hydradx_runtime.compact.compressed.wasm
#      - name: Clippy
#        run: make clippy-all

#      - name: Build benchmarks CLI
#        id: build-benchmarks
#        run: make build-benchmarks

      - run: unzip bin/hydradx-bencher.zip -d bin
      - name: Upload benchmarks CLI
        uses: actions/upload-artifact@v4
        with:
          name: hydradx-bencher
          path: bin/hydradx

  benchmark-check:
    runs-on: toad
    concurrency: benchmark-execution
    needs: build
    permissions:
      pull-requests: write
      actions: read
    steps:
      - name: Prepare benchmark execution
        id: prepare
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
               echo "benchmark_type=full" >> $GITHUB_OUTPUT
          else
               echo "benchmark_type=quick" >> $GITHUB_OUTPUT
          fi
          
          pr_number=${{ github.event.number }}
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT
          
          if [[ -z "$pr_number" ]]; then
            pr_number=$(curl -s \
              -H "Accept: application/vnd.github+json" \
                "https://api.github.com/repos/${{ github.repository }}/pulls?head=${{ github.repository_owner }}:${{ github.head_ref }}&state=open" | \
              grep '"number":' | \
              sed 's/[^0-9]*//g' | \
              head -n 1
            )
            echo "pr_number=$pr_number" >> $GITHUB_OUTPUT
          
            if [[ -z "$pr_number" ]]; then
              echo "Warning: Could not determine PR number from either event context or API" >&2
              exit 1
            fi
          fi

      - name: Download benchmarks CLI
        uses: actions/download-artifact@v4
        with:
          name: hydradx-bencher
          path: ./bin
      - run: chmod +x ./bin/hydradx

      - name: Run ${{ steps.prepare.outputs.benchmark_type }} benchmarks
        run: |
          BENCHMARK_FLAGS="--all --bin ./bin/hydradx --check"
          #if [[ "${{ steps.prepare.outputs.benchmark_type }}" == "quick" ]]; then
          #  BENCHMARK_FLAGS="$BENCHMARK_FLAGS --check"
          #fi
          ./scripts/benchmarking.sh $BENCHMARK_FLAGS 2>&1

      - name: Upload weights directory
        id: bencher-weights
        uses: actions/upload-artifact@v4
        with:
          name: quick-benchmark-weights
          path: runtime/hydradx/src/weights/
          retention-days: 3

      - name: Commit full benchmark results to a pull request
        if: steps.prepare.outputs.benchmark_type == 'full'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          
          # Add and check if there are changes
          git add runtime/hydradx/src/weights/
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          # Commit and push changes directly to the branch that triggered the workflow
          git commit -m "update pallets weights"
          git push origin HEAD:${{ github.head_ref || github.ref_name }}
          
          echo "Successfully pushed benchmark results to branch ${{ github.head_ref || github.ref_name }}"

      - name: Sticky Pull Request Comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2.1.0
        with:
          header: 'benchmark'
          recreate: true
          number: ${{ steps.prepare.outputs.pr_number }}
          message: |
            ${{ steps.prepare.outputs.benchmark_type == 'full' && 'Full' || 'Quick' }} benchmark at commit ${{ github.sha }} has been executed successfully.
            [View results](${{ steps.bencher-weights.outputs.artifact-url }})